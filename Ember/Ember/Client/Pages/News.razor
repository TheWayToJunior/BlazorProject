@page "/news"

@inject HttpClient HttpClient

<section>
    <div class="container-fluid">
        <div class="container">

            <div class="news-category">
                <ul class="filter-ul">
                    <li>
                        <NavLink href="news" Match="NavLinkMatch.All">
                            <span>Все</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="#">
                            <span>События</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="#">
                            <span>Ремонт</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="#">
                            <span>Экология</span>
                        </NavLink>
                    </li>
                </ul>
            </div>

            @if (news == null)
            {
                <h5>Looding...</h5>
            }
            else
            {
                @foreach (var item in news)
                {
                    <div class="blog-post">
                        <div class="blog-post__img">
                            <img src="@item.ImageSrc"/>
                        </div>
                        <div class="blog-post__info">
                            <div class="blog-post__date">
                                <span>@item.Time.Date.DayOfWeek</span>
                                <span>@item.Time.ToLongDateString()</span>
                            </div>
                            <h1 class="blog-post__title">@item.Title</h1>
                            <p class="blog-post__text">@item.Description</p>
                            <a class="blog-post__cta" href="#">Подробнее</a>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</section>

@code 
{
    private IEnumerable<NewsPost> news = null;

    protected override async Task OnInitializedAsync()
    {
        news = (await HttpClient.GetJsonAsync<IEnumerable<NewsPost>>("api/News"))
            .OrderByDescending(n => n.Time);
    }
}
